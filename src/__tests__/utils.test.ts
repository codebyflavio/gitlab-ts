import { getConfigYaml } from "../utils";
import { Config } from "../interfaces";

describe("[getConfigYaml]", () => {
  it("Creates a simple config", () => {
    enum Stages {
      INSTALL = "Install",
      BUILD = "Build",
      TEST = "Test",
      DEPLOY = "Deploy",
    }

    enum JobNames {
      INSTALL = "Install",
      BUILD_DEPS = "Build:deps",
      BUILD_APP = "Build:app",
      DEPLOY = "Deploy",
    }

    const config: Config<Stages, JobNames> = {
      stages: [Stages.INSTALL, Stages.BUILD, Stages.TEST, Stages.DEPLOY],
      jobs: [
        {
          name: JobNames.INSTALL,
          stage: Stages.INSTALL,
          script: ["npm install"],
        },
        {
          name: JobNames.BUILD_DEPS,
          stage: Stages.BUILD,
          script: ["npm run compile"],
          needs: [{ job: JobNames.INSTALL }],
        },
        {
          name: JobNames.BUILD_APP,
          stage: Stages.BUILD,
          script: ["npm run build"],
          needs: [{ job: JobNames.INSTALL }],
        },
        {
          name: JobNames.DEPLOY,
          stage: Stages.DEPLOY,
          script: ["npm run publish"],
        },
      ],
    };

    expect(getConfigYaml(config)).toMatchInlineSnapshot(`
      "# THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

      stages:
        - Install
        - Build
        - Test
        - Deploy
      Install:
        stage: Install
        script:
          - npm install
      Build:deps:
        stage: Build
        script:
          - npm run compile
        needs:
          - job: Install
      Build:app:
        stage: Build
        script:
          - npm run build
        needs:
          - job: Install
      Deploy:
        stage: Deploy
        script:
          - npm run publish

      "
    `);
  });
});
